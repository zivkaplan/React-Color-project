{"version":3,"sources":["components/Page.js","components/styles/mediaQueries.js","components/styles/PaletteStyles.js","components/styles/NavbarStyles.js","components/Navbar.js","components/styles/ColorBoxStyles.js","components/ColorBox.js","components/styles/PaletteFooterStyles.js","components/PaletteFooter.js","components/Palette.js","components/SingleColorPalette.js","components/styles/bg.svg","components/styles/PaletteListStyles.js","components/styles/MiniPaletteStyles.js","components/MiniPalette.js","components/PaletteList.js","constants.js","components/styles/NewPaletteFormStyles.js","components/styles/PaletteFormNavStyles.js","components/PaletteNamePopup.js","components/PaletteFormNav.js","components/styles/ColorPickerFormStyles.js","components/ColorPickerForm.js","components/styles/DraggableColorBoxStyles.js","components/DraggableColorBox.js","components/DraggableColorList.js","seedColors.js","components/NewPaletteForm.js","colorHelpers.js","App.js","reportWebVitals.js","index.js"],"names":["Page","children","className","mediaQueries","up","down","size","xs","sm","md","lg","xl","styles","opacity","transition","Palette","height","display","flexDirection","PaletteColors","overflow","goBack","width","margin","position","cursor","verticalAlign","backgroundColor","textAlign","color","textDecoration","top","left","marginLeft","marginTop","outline","fontSize","lineHeight","textTransform","border","Navbar","alignItems","justifyContent","padding","sliderContainer","flexShrink","paddingTop","slider","logo","marginRight","fontFamily","letterSpacing","minWidth","paddingBottom","selectContainer","currentLevel","props","state","colorFormat","open","handleFormatChange","bind","closeSnackbar","e","this","setState","target","value","changeColorFormat","classes","level","changeLevel","to","showSlider","defaultValue","min","max","step","onAfterChange","trackStyle","handleStyle","borderColor","boxShadow","railStyle","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","toUpperCase","ContentProps","action","IconButton","onClick","React","Component","withStyles","ColorBox","boxSizing","showingFullPalette","transform","autoTextColor","chroma","background","luminance","seeMore","bottom","right","copyButton","boxContent","copyOverlay","zIndex","copyMsg","transitionDelay","fontWeight","textShadow","marginBottom","font","showOverlay","showCopyMsg","handleCopy","setTimeout","name","moreShadesUrl","text","onCopy","style","stopPropagation","PaletteFooter","emoji","paletteName","palette","colorBoxes","colors","map","id","SingleColorPalette","_shades","gatherShades","colorId","shades","Object","keys","forEach","push","filter","slice","backButton","root","backgroundImage","bg","heading","container","flexWrap","nav","borderRadius","palettes","gridTemplateColumns","gap","title","miniColor","delete","deleteIcon","MiniPalette","deletePaletteDialog","handleClick","goToPalette","PureComponent","PaletteList","openDeleteDialog","paletteIdToDelete","toggleDeleteDialog","deletePalette","history","TransitionGroup","CSSTransition","classNames","timeout","key","Dialog","DialogTitle","List","ListItem","button","ListItemAvatar","Avatar","blue","ListItemText","primary","red","DRAWER_WIDTH","theme","hide","drawer","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","drawerContainer","buttonsDiv","maxWidth","appBar","appBarShift","menuButton","navBtns","PaletteNamePopup","newPaletteName","emojiPopup","handleChange","savePalette","handleClose","handleOpen","openEmojiPicker","ValidatorForm","addValidationRule","every","toLowerCase","handleSubmit","native","namePopup","popupState","onSelect","onSubmit","DialogContent","DialogContentText","fullWidth","label","validators","errorMessages","DialogActions","Button","variant","type","PaletteFormNav","handleDrawerOpen","CssBaseline","AppBar","Toolbar","disableGutters","Typography","createPaletteTitle","noWrap","withTheme","colorPicker","addColor","colorNameInput","ColorPickerForm","newColorName","currentColor","updateColor","newColor","hex","addNewColor","paletteIsFull","onChangeComplete","ref","instantValidate","disabled","DraggableColorBox","SortableElement","handleDelete","DraggableColorList","SortableContainer","idx","index","deleteColor","seedColors","NewPaletteForm","handleDrawerClose","onSortEnd","oldIndex","newIndex","arrayMove","clearPalette","addRandomColor","newPalette","replace","colorName","allColors","p","flat","getRandomColor","Math","floor","random","length","randomColor","includes","maxColors","Drawer","anchor","paper","Divider","gutterBottom","axis","distance","defaultProps","levels","generatePalette","hexColor","numberOfColors","scale","darken","getRange","mode","reverse","shade","i","rgb","css","rgba","App","JSON","parse","window","localStorage","getItem","findPalette","syncLocalStorage","find","st","setItem","stringify","paletteListPage","routeProps","render","location","exact","path","match","params","paletteId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38a79101.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Page.css';\n\nfunction Page({ children }) {\n    return <section className=\"Page\">{children}</section>;\n}\n\nexport default Page;\n","const mediaQueries = {\n    up() {},\n    down(size) {\n        const sizes = {\n            xs: '575.98px',\n            sm: '767.98px',\n            md: '1199.98px',\n            lg: '1399.98px',\n            xl: '1599.98px',\n        };\n        return `@media (max-width: ${sizes[size]})`;\n    },\n};\n\nexport default mediaQueries;\n","import mediaQueries from './mediaQueries';\n\nconst styles = {\n    '@global': {\n        '.fade-enter': {\n            opacity: 0,\n        },\n        '.fade-enter-active': {\n            opacity: 1,\n            transition: 'opacity 500ms ease-out',\n        },\n        '.fade-exit': {\n            opacity: 1,\n        },\n        '.fade-exit-active': {\n            opacity: 0,\n            transition: 'opacity 500ms ease-out',\n        },\n    },\n    Palette: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    PaletteColors: {\n        height: '90%',\n        overflow: 'hidden',\n    },\n    goBack: {\n        width: '20%',\n        height: '50%',\n        display: 'inline-block',\n        margin: '0 auto',\n        position: 'relative',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        backgroundColor: 'black',\n        textAlign: 'center',\n        color: 'white',\n        '& a': {\n            textDecoration: 'none',\n            width: '100px',\n            height: '30px',\n            position: 'absolute',\n            display: 'inline-block',\n            top: '50%',\n            left: '50%',\n            marginLeft: '-50px',\n            marginTop: '-15px',\n            outline: 'none',\n            textAlign: 'center',\n            fontSize: '1rem',\n            lineHeight: '30px',\n            backgroundColor: 'rgba(255, 255, 255, 0.3)',\n            textTransform: 'uppercase',\n            border: 'none',\n            cursor: 'pointer',\n            color: 'white',\n        },\n        [mediaQueries.down('lg')]: {\n            width: '25%',\n            height: '33.33%',\n        },\n        [mediaQueries.down('md')]: {\n            width: '50%',\n            height: '20%',\n        },\n        [mediaQueries.down('xs')]: {\n            width: '100%',\n            height: '10%',\n        },\n    },\n};\n\nexport default styles;\n","import mediaQueries from './mediaQueries';\n\nconst styles = {\n    Navbar: {\n        display: 'flex',\n        height: '6vh',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [mediaQueries.down('xs')]: {\n            justifyContent: 'center',\n            flexDirection: 'column',\n            height: 'fit-content',\n            padding: '0px 10px 10px',\n        },\n    },\n    sliderContainer: {\n        width: '100%',\n        flexShrink: 2,\n        [mediaQueries.down('xs')]: {\n            paddingTop: '5px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n        },\n    },\n    slider: {\n        display: 'inline-block',\n        width: '340px',\n        margin: '0 10px',\n        [mediaQueries.down('md')]: {\n            width: '200px',\n        },\n        [mediaQueries.down('sm')]: {\n            width: '100px',\n        },\n        [mediaQueries.down('xs')]: {\n            width: '80%',\n            paddingTop: '5px',\n        },\n    },\n    logo: {\n        marginRight: '15px',\n        padding: '0 13px',\n        backgroundColor: '#eceff1',\n        fontSize: '22px',\n        fontFamily: \"'Roboto', sans-serif\",\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        letterSpacing: '2px',\n        textTransform: 'uppercase',\n        minWidth: '260px',\n        '& a': {\n            textDecoration: 'none',\n            color: 'black',\n            paddingTop: '5px',\n            paddingBottom: '5px',\n            width: '100%',\n        },\n        [mediaQueries.down('xs')]: {\n            width: '100%',\n            textAlign: 'center',\n        },\n    },\n    selectContainer: {\n        marginRight: '15px',\n        marginLeft: 'auto',\n    },\n    currentLevel: {\n        marginRight: '10px',\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles/NavbarStyles';\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { colorFormat: 'hex', open: false };\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n    }\n    handleFormatChange(e) {\n        this.setState({ open: true, colorFormat: e.target.value }, () =>\n            this.props.changeColorFormat(this.state.colorFormat)\n        );\n    }\n    closeSnackbar() {\n        this.setState({ open: false });\n    }\n    render() {\n        const { classes, level, changeLevel } = this.props;\n        const { colorFormat, open } = this.state;\n        return (\n            <header className={classes.Navbar}>\n                <div className={classes.logo}>\n                    <Link to=\"/\">react-color-picker</Link>\n                </div>\n                {this.props.showSlider && (\n                    <div className={classes.sliderContainer}>\n                        <span className={`${classes.currentLevel}`}>\n                            Level: {this.props.level}\n                        </span>\n                        <div className={classes.slider}>\n                            <Slider\n                                defaultValue={level}\n                                min={100}\n                                max={900}\n                                step={100}\n                                onAfterChange={changeLevel}\n                                trackStyle={{ backgroundColor: 'transparent' }}\n                                handleStyle={{\n                                    borderColor: 'green',\n                                    outline: 'none',\n                                    border: '2px solid green',\n                                    boxShadow: 'none',\n                                    width: '13px',\n                                    height: '13px',\n                                    marginLeft: '-7px',\n                                    marginTop: '-3px',\n                                }}\n                                railStyle={{ height: 8 }}\n                            />\n                        </div>\n                    </div>\n                )}\n                <div className={classes.selectContainer}>\n                    <Select\n                        value={colorFormat}\n                        onChange={this.handleFormatChange}\n                    >\n                        <MenuItem value=\"hex\">HEX</MenuItem>\n                        <MenuItem value=\"rgb\">RGB</MenuItem>\n                        <MenuItem value=\"rgba\">RGBA</MenuItem>\n                    </Select>\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    autoHideDuration={2000}\n                    open={open}\n                    onClose={this.closeSnackbar}\n                    message={\n                        <span>{`Color Format Set To ${colorFormat.toUpperCase()}`}</span>\n                    }\n                    ContentProps={{ 'aria-describedby': 'message-id' }}\n                    action={[\n                        <IconButton\n                            onClick={this.closeSnackbar}\n                            color=\"inherit\"\n                            key=\"close\"\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </header>\n        );\n    }\n}\n\nexport default withStyles(styles)(Navbar);\n","import chroma from 'chroma-js';\nimport mediaQueries from './mediaQueries';\n\nconst styles = {\n    ColorBox: {\n        boxSizing: 'border-box',\n        width: '20%',\n        height: (props) => (props.showingFullPalette ? '25%' : '50%'),\n        display: 'inline-block',\n        margin: '0 auto',\n        position: 'relative',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        '&:hover .copyButton': {\n            transform: 'scale(1)',\n        },\n        [mediaQueries.down('lg')]: {\n            width: '25%',\n            height: (props) => (props.showingFullPalette ? '20%' : '33.33%'),\n        },\n        [mediaQueries.down('md')]: {\n            width: '50%',\n            height: (props) => (props.showingFullPalette ? '10%' : '20%'),\n        },\n        [mediaQueries.down('xs')]: {\n            width: '100%',\n            height: (props) => (props.showingFullPalette ? '5%' : '10%'),\n        },\n    },\n    autoTextColor: {\n        color: (props) =>\n            chroma(props.background).luminance() <= 0.4\n                ? 'white'\n                : 'rgba(0, 0, 0, 0.6)',\n    },\n    seeMore: {\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\n        position: 'absolute',\n        bottom: '0',\n        right: '0',\n        border: 'none',\n        width: '60px',\n        height: '30px',\n        lineHeight: '30px',\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    copyButton: {\n        transform: 'scale(0)',\n        textDecoration: 'none',\n        width: '100px',\n        height: '30px',\n        position: 'absolute',\n        display: 'inline-block',\n        top: '50%',\n        left: '50%',\n        marginLeft: '-50px',\n        marginTop: '-15px',\n        outline: 'none',\n        textAlign: 'center',\n        fontSize: '1rem',\n        lineHeight: '30px',\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\n        textTransform: 'uppercase',\n        border: 'none',\n        cursor: 'pointer',\n    },\n    boxContent: {\n        position: 'absolute',\n        width: '100%',\n        padding: '10px',\n        left: '0',\n        bottom: '0',\n        fontSize: '12px',\n        textTransform: 'uppercase',\n        letterSpacing: '1px',\n    },\n    copyOverlay: {\n        opacity: '0',\n        transform: 'scale(0.1)',\n        zIndex: '0',\n        width: '100%',\n        height: '100%',\n        transition: 'transform 600ms ease-in-out',\n    },\n    copyMsg: {\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '4rem',\n        transform: 'scale(0)',\n        opacity: '0',\n        color: 'white',\n        transition: 'transform 300ms ease-in-out',\n        transitionDelay: '250ms',\n        '& h1': {\n            textAlign: 'center',\n            fontWeight: '400',\n            textShadow: '1px 2px black',\n            backgroundColor: 'rgba(255, 255, 255, 0.3)',\n            width: '100%',\n            padding: '1rem',\n            marginBottom: '0',\n            textTransform: 'uppercase',\n            [mediaQueries.down('xs')]: {\n                fontSize: '6rem',\n            },\n        },\n        '& p': {\n            font: '2rem',\n            fontWeight: '100',\n        },\n    },\n    showOverlay: {\n        opacity: '1',\n        transform: 'scale(50)',\n        position: 'fixed',\n        zIndex: '100',\n    },\n    showCopyMsg: {\n        opacity: '1',\n        transform: 'scale(1)',\n        zIndex: '1000',\n    },\n};\nexport default styles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/ColorBoxStyles';\n\nclass ColorBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            copyOverlay: false,\n        };\n        this.handleCopy = this.handleCopy.bind(this);\n    }\n    handleCopy() {\n        this.setState({ copyOverlay: true }, () => {\n            setTimeout(() => this.setState({ copyOverlay: false }), 1500);\n        });\n    }\n    render() {\n        const { classes, name, background, moreShadesUrl, showingFullPalette } =\n            this.props;\n        const { copyOverlay } = this.state;\n        return (\n            <CopyToClipboard text={background} onCopy={this.handleCopy}>\n                <div style={{ background }} className={classes.ColorBox}>\n                    <div\n                        style={{ background }}\n                        className={`${classes.copyOverlay} ${\n                            copyOverlay && classes.showOverlay\n                        }`}\n                    />\n                    <div\n                        className={`${classes.copyMsg} ${\n                            copyOverlay && classes.showCopyMsg\n                        }\n                        `}\n                    >\n                        <h1>Copied!</h1>\n                        <p className={classes.autoTextColor}>{background}</p>\n                    </div>\n                    <div>\n                        <div className={classes.boxContent}>\n                            <span className={classes.autoTextColor}>\n                                {name}\n                            </span>\n                        </div>\n                        <button\n                            className={`copyButton ${classes.copyButton} ${classes.autoTextColor}`}\n                        >\n                            Copy\n                        </button>\n                    </div>\n                    {showingFullPalette && (\n                        <Link\n                            to={moreShadesUrl}\n                            onClick={(e) => e.stopPropagation()}\n                        >\n                            <span\n                                className={`${classes.seeMore} ${classes.autoTextColor}`}\n                            >\n                                More\n                            </span>\n                        </Link>\n                    )}\n                </div>\n            </CopyToClipboard>\n        );\n    }\n}\n\nexport default withStyles(styles)(ColorBox);\n","const styles = {\n    PaletteFooter: {\n        backgroundColor: 'white',\n        width: '100%',\n        height: '5vh',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        fontWeight: '700',\n    },\n    emoji: {\n        margin: '0 15px',\n        fontSize: '1.5rem',\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/PaletteFooterStyles';\n\nfunction PaletteFooter(props) {\n    const { paletteName, classes, emoji } = props;\n    return (\n        <footer className={classes.PaletteFooter}>\n            {paletteName}\n            <span className={classes.emoji}>{emoji}</span>\n        </footer>\n    );\n}\nexport default withStyles(styles)(PaletteFooter);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/PaletteStyles';\nimport Navbar from './Navbar';\nimport ColorBox from './ColorBox';\nimport PaletteFooter from './PaletteFooter';\n\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { level: 500, colorFormat: 'hex' };\n        this.changeLevel = this.changeLevel.bind(this);\n        this.changeColorFormat = this.changeColorFormat.bind(this);\n    }\n\n    changeLevel(level) {\n        this.setState({ level });\n    }\n    changeColorFormat(colorFormat) {\n        this.setState({ colorFormat });\n    }\n\n    render() {\n        const { classes, palette } = this.props;\n        const { colorFormat, level } = this.state;\n        const colorBoxes = palette.colors[level].map((color) => (\n            <ColorBox\n                background={color[colorFormat]}\n                name={color.name}\n                key={color.id}\n                showingFullPalette={true}\n                moreShadesUrl={`/palette/${palette.id}/${color.id}`}\n            />\n        ));\n        return (\n            <div className={classes.Palette}>\n                <Navbar\n                    showSlider={true}\n                    level={level}\n                    changeLevel={this.changeLevel}\n                    changeColorFormat={this.changeColorFormat}\n                />\n                <div className={classes.PaletteColors}>{colorBoxes}</div>\n                <PaletteFooter\n                    paletteName={palette.paletteName}\n                    emoji={palette.emoji}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Palette);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/PaletteStyles';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\n\nclass SingleColorPalette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colorFormat: 'hex',\n        };\n        this._shades = this.gatherShades(\n            this.props.palette,\n            this.props.colorId\n        );\n        this.changeColorFormat = this.changeColorFormat.bind(this);\n    }\n    changeColorFormat(colorFormat) {\n        this.setState({ colorFormat });\n    }\n\n    gatherShades(palette, colorId) {\n        let shades = [];\n        Object.keys(palette.colors).forEach((level) => {\n            shades.push(\n                ...palette.colors[level].filter((color) => color.id === colorId)\n            );\n        });\n        return shades.slice(1);\n    }\n    render() {\n        const { classes, palette } = this.props;\n        const { colorFormat } = this.state;\n        const colorBoxes = this._shades.map((color) => (\n            <ColorBox\n                key={color.name}\n                name={color.name}\n                background={color[colorFormat]}\n                showingFullPalette={false}\n            />\n        ));\n        return (\n            <div className={classes.Palette}>\n                <Navbar\n                    showSlider={false}\n                    changeColorFormat={this.changeColorFormat}\n                />\n                <div className={classes.PaletteColors}>\n                    {colorBoxes}\n                    <div className={classes.goBack}>\n                        <Link\n                            className={classes.backButton}\n                            to={`/palette/${palette.id}`}\n                        >\n                            Go Back\n                        </Link>\n                    </div>\n                </div>\n                <PaletteFooter\n                    paletteName={palette.paletteName}\n                    emoji={palette.emoji}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SingleColorPalette);\n","export default __webpack_public_path__ + \"static/media/bg.b590c2f9.svg\";","import mediaQueries from './mediaQueries';\nimport bg from './bg.svg';\n\nconst styles = {\n    root: {\n        height: '100vh',\n        overflow: 'scroll',\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        backgroundColor: '#017DBB',\n        backgroundImage: `url(${bg})`,\n        /* background by SVGBackgrounds.com */\n    },\n    heading: {\n        fontSize: '2rem',\n        fontWeight: 500,\n    },\n    container: {\n        width: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n        [mediaQueries.down('xl')]: {\n            width: '70%',\n        },\n    },\n    nav: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        color: 'white',\n        fontFamily: \"'Roboto', sans-serif\",\n        '& a': {\n            color: 'black',\n            textDecoration: 'none',\n            backgroundColor: '#D5D5D5',\n            borderRadius: '5px',\n            padding: '0.7rem 1rem',\n            textAlign: 'center',\n            boxShadow: '0px 2px black',\n            '&:hover': {\n                backgroundColor: 'grey',\n            },\n        },\n    },\n    palettes: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'grid',\n        paddingBottom: '20px',\n        gridTemplateColumns: 'repeat(3,30%)',\n        gap: '1.5rem',\n        [mediaQueries.down('md')]: {\n            gridTemplateColumns: 'repeat(2,50%)',\n        },\n        [mediaQueries.down('xs')]: {\n            gridTemplateColumns: 'repeat(1,100%)',\n        },\n    },\n};\nexport default styles;\n","const styles = {\n    root: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        padding: '0.5rem',\n        position: 'relative',\n        overflow: 'hidden',\n        cursor: 'pointer',\n        '&:hover .deleteIcon': {\n            opacity: 1,\n        },\n    },\n\n    colors: {\n        overflow: 'hidden',\n        borderRadius: '5px',\n        backgroundColor: '#dae1e4',\n        height: '150px',\n        width: '100%',\n    },\n\n    title: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: '0',\n        color: 'black',\n        paddingTop: '0.5rem',\n        fontSize: '1rem',\n        position: 'relative',\n    },\n    emoji: {\n        marginLeft: '0.5rem',\n        fontSize: '1.5rem',\n    },\n    miniColor: {\n        width: '20%',\n        height: '25%',\n        display: 'inline-block',\n        position: 'relative',\n        margin: '0 auto',\n        marginBottom: '-4px',\n    },\n    delete: {},\n    deleteIcon: {\n        position: 'absolute',\n        top: '0px',\n        right: '0px',\n        zIndex: 2,\n        color: 'white',\n        backgroundColor: '#eb3d30',\n        width: '20px',\n        height: '20px',\n        padding: '10px',\n        boxShadow: '0 0 5px rgba(0,0,0,0.5)',\n        transition: 'opacity 150ms ease-out',\n        borderRadius: '5px',\n        opacity: 0,\n    },\n};\nexport default styles;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/MiniPaletteStyles';\n\nclass MiniPalette extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.deletePaletteDialog = this.deletePaletteDialog.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    deletePaletteDialog(e) {\n        e.stopPropagation();\n        this.props.deletePaletteDialog(this.props.id);\n    }\n    handleClick() {\n        this.props.goToPalette(this.props.id);\n    }\n    render() {\n        const { classes, paletteName, emoji, colors } = this.props;\n        return (\n            <div className={classes.root} onClick={this.handleClick}>\n                <DeleteIcon\n                    className={`deleteIcon ${classes.deleteIcon}`}\n                    onClick={this.deletePaletteDialog}\n                />\n                <div className={classes.colors}>\n                    {colors.map((color) => (\n                        <div\n                            className={classes.miniColor}\n                            style={{ backgroundColor: color.color }}\n                            key={color.name}\n                        ></div>\n                    ))}\n                </div>\n                <h5 className={classes.title}>\n                    {paletteName}\n                    <span className={classes.emoji}>{emoji}</span>\n                </h5>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(MiniPalette);\n","import Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { blue, red } from '@material-ui/core/colors';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/PaletteListStyles';\nimport MiniPalette from './MiniPalette';\n\nclass PaletteList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { openDeleteDialog: false, paletteIdToDelete: null };\n        this.toggleDeleteDialog = this.toggleDeleteDialog.bind(this);\n        this.goToPalette = this.goToPalette.bind(this);\n        this.deletePalette = this.deletePalette.bind(this);\n    }\n\n    toggleDeleteDialog(paletteIdToDelete) {\n        this.setState({\n            openDeleteDialog: !this.state.openDeleteDialog,\n            paletteIdToDelete: this.state.openDeleteDialog\n                ? null\n                : paletteIdToDelete,\n        });\n    }\n    deletePalette() {\n        this.props.deletePalette(this.state.paletteIdToDelete);\n        this.toggleDeleteDialog();\n    }\n    goToPalette(id) {\n        this.props.history.push(`/palette/${id}`);\n    }\n\n    render() {\n        const { classes, palettes } = this.props;\n        const { openDeleteDialog } = this.state;\n        return (\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    <nav className={classes.nav}>\n                        <h1 className={classes.heading}>React Colors</h1>\n                        <Link to=\"/palette/create\">Create Palette</Link>\n                    </nav>\n                    <TransitionGroup className={classes.palettes}>\n                        {palettes.map((palette) => (\n                            <CSSTransition\n                                key={palette.id}\n                                classNames=\"fade\"\n                                timeout={500}\n                            >\n                                <MiniPalette\n                                    {...palette}\n                                    key={palette.id}\n                                    deletePaletteDialog={\n                                        this.toggleDeleteDialog\n                                    }\n                                    goToPalette={this.goToPalette}\n                                />\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </div>\n                <Dialog\n                    onClose={this.toggleDeleteDialog}\n                    aria-labelledby=\"delete-palette-dialog-title\"\n                    open={openDeleteDialog}\n                >\n                    <DialogTitle id=\"delete-palette-dialog-title\">\n                        Delete Palette?\n                    </DialogTitle>\n                    <List>\n                        <ListItem button onClick={this.deletePalette}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    style={{\n                                        backgroundColor: blue[100],\n                                        color: blue[600],\n                                    }}\n                                >\n                                    <CheckIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"Delete\" />\n                        </ListItem>\n                        <ListItem button onClick={this.toggleDeleteDialog}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    style={{\n                                        backgroundColor: red[100],\n                                        color: red[600],\n                                    }}\n                                >\n                                    <CloseIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"cancel\" />\n                        </ListItem>\n                    </List>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(PaletteList);\n","export const DRAWER_WIDTH = 400;\n","import { DRAWER_WIDTH } from '../../constants';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: DRAWER_WIDTH,\n        flexShrink: 0,\n        marginRight: '-5px',\n    },\n    drawerPaper: {\n        width: DRAWER_WIDTH,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    drawerHeader: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        height: 'calc(100vh - 64px)',\n        padding: 0,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -DRAWER_WIDTH,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    drawerContainer: {\n        width: '90%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    buttonsDiv: {\n        width: '100%',\n    },\n    button: {\n        width: '50%',\n    },\n});\nexport default styles;\n","import { DRAWER_WIDTH } from '../../constants';\nimport mediaQueries from './mediaQueries';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        maxWidth: '100vw',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '64px',\n    },\n    appBarShift: {\n        width: `calc(100% - ${DRAWER_WIDTH}px)`,\n        marginLeft: DRAWER_WIDTH,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n        [mediaQueries.down('xs')]: {\n            marginLeft: 0,\n            marginRight: 0,\n        },\n    },\n    navBtns: {\n        marginRight: '0.5rem',\n        [mediaQueries.down('xs')]: {\n            margin: '0',\n        },\n    },\n    button: {\n        margin: '0 0.5rem',\n        '& a': {\n            textDecoration: 'none',\n        },\n        [mediaQueries.down('xs')]: {\n            marginRight: '0.2rem',\n            fontSize: '12px',\n        },\n    },\n    hide: {\n        display: 'none',\n    },\n});\n\nexport default styles;\n","import React from 'react';\nimport { Picker } from 'emoji-mart';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport 'emoji-mart/css/emoji-mart.css';\n\nexport default class PaletteNamePopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            newPaletteName: '',\n            emojiPopup: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.savePalette = this.savePalette.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n        this.openEmojiPicker = this.openEmojiPicker.bind(this);\n    }\n    componentDidMount() {\n        ValidatorForm.addValidationRule('isPaletteNameUnique', (value) =>\n            this.props.palettes.every(\n                ({ paletteName }) =>\n                    paletteName.toLowerCase() !== value.toLowerCase()\n            )\n        );\n    }\n    savePalette(emoji) {\n        this.props.handleSubmit(this.state.newPaletteName, emoji.native);\n        this.handleClose();\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    handleClose() {\n        this.setState({ emojiPopup: false });\n        this.props.handleClose();\n    }\n\n    handleOpen() {\n        this.props.handleOpen();\n    }\n    openEmojiPicker() {\n        this.setState({ emojiPopup: true, namePopup: false });\n    }\n\n    render() {\n        const { emojiPopup, newPaletteName } = this.state;\n        const { popupState } = this.props;\n        return (\n            <div>\n                <Dialog open={emojiPopup} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        Pick an Emoji for Your Palette\n                    </DialogTitle>\n                    <Picker\n                        onSelect={this.savePalette}\n                        title=\"Choose an Emoji\"\n                    />\n                </Dialog>\n                <Dialog\n                    open={popupState && !emojiPopup}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        Name Your New Palette\n                    </DialogTitle>\n                    <ValidatorForm onSubmit={this.openEmojiPicker}>\n                        <DialogContent>\n                            <DialogContentText>\n                                Enter a name for your new palette. Please Make\n                                sure it's unique!\n                            </DialogContentText>\n\n                            <TextValidator\n                                fullWidth\n                                margin=\"normal\"\n                                label=\"Palette Name\"\n                                name=\"newPaletteName\"\n                                value={newPaletteName}\n                                onChange={this.handleChange}\n                                validators={['required', 'isPaletteNameUnique']}\n                                errorMessages={[\n                                    'enter a palette name',\n                                    'palette name already exists',\n                                ]}\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                            >\n                                Save Palette\n                            </Button>\n                        </DialogActions>\n                    </ValidatorForm>\n                </Dialog>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddToPhotos from '@material-ui/icons/AddToPhotos';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/PaletteFormNavStyles';\nimport PaletteNamePopup from './PaletteNamePopup';\n\nclass PaletteFormNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { newPaletteName: '', popupState: false };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    handleOpen() {\n        this.setState({ popupState: true });\n    }\n    handleClose() {\n        this.setState({ popupState: false });\n    }\n\n    render() {\n        const { classes, open, handleDrawerOpen, palettes, handleSubmit } =\n            this.props;\n        const { newPaletteName, popupState } = this.state;\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    color=\"default\"\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={handleDrawerOpen}\n                            className={classNames(\n                                classes.menuButton,\n                                open && classes.hide\n                            )}\n                        >\n                            <AddToPhotos />\n                        </IconButton>\n                        <Typography\n                            className={classes.createPaletteTitle}\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                        >\n                            Create A Palette\n                        </Typography>\n                    </Toolbar>\n                    <div className={classes.navBtns}>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleOpen}\n                        >\n                            Save\n                        </Button>\n                        <Link to=\"/\">\n                            <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                Back\n                            </Button>\n                        </Link>\n                    </div>\n                </AppBar>\n                <PaletteNamePopup\n                    popupState={popupState}\n                    palettes={palettes}\n                    handleSubmit={handleSubmit}\n                    newPaletteName={newPaletteName}\n                    handleClose={this.handleClose}\n                />\n                )\n            </div>\n        );\n    }\n}\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);\n","const styles = {\n    colorPicker: {\n        width: '100%',\n        marginTop: '2rem',\n    },\n    addColor: {\n        width: '100%',\n        fontSize: '2rem',\n        padding: '1rem',\n        marginTop: '1rem',\n    },\n    colorNameInput: {\n        width: '100%',\n        height: '70px',\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/ColorPickerFormStyles';\n\nclass ColorPickerForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { newColorName: '', currentColor: 'green' };\n        this.handleChange = this.handleChange.bind(this);\n        this.updateColor = this.updateColor.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule('isColorNameUnique', (value) =>\n            this.props.colors.every(\n                ({ name }) => name.toLowerCase() !== value.toLowerCase()\n            )\n        );\n        ValidatorForm.addValidationRule('isColorUnique', (value) =>\n            this.props.colors.every(\n                ({ color }) => color !== this.state.currentColor\n            )\n        );\n    }\n    updateColor(newColor) {\n        this.setState({ currentColor: newColor.hex });\n    }\n    handleSubmit() {\n        const newColor = {\n            color: this.state.currentColor,\n            name: this.state.newColorName,\n        };\n        this.props.addNewColor(newColor);\n        this.setState({ newColorName: '' });\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { paletteIsFull, classes } = this.props;\n        const { newColorName, currentColor } = this.state;\n        return (\n            <div>\n                <ChromePicker\n                    className={classes.colorPicker}\n                    color={currentColor}\n                    onChangeComplete={this.updateColor}\n                    width=\"100%\"\n                />\n                <ValidatorForm\n                    onSubmit={this.handleSubmit}\n                    ref=\"form\"\n                    instantValidate={false}\n                >\n                    <TextValidator\n                        margin=\"normal\"\n                        className={classes.colorNameInput}\n                        name=\"newColorName\"\n                        variant=\"filled\"\n                        label=\"Color Name\"\n                        value={newColorName}\n                        onChange={this.handleChange}\n                        validators={[\n                            'required',\n                            'isColorNameUnique',\n                            'isColorUnique',\n                        ]}\n                        errorMessages={[\n                            'enter a color name',\n                            'color name already exists',\n                            'color already in palette',\n                        ]}\n                    />\n                    <Button\n                        className={classes.addColor}\n                        variant=\"contained\"\n                        type=\"submit\"\n                        color=\"primary\"\n                        style={{\n                            backgroundColor: paletteIsFull\n                                ? 'grey'\n                                : currentColor,\n                        }}\n                        disabled={paletteIsFull}\n                    >\n                        {paletteIsFull ? 'Palette Full' : 'Add Color'}\n                    </Button>\n                </ValidatorForm>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(ColorPickerForm);\n","import chroma from 'chroma-js';\nimport mediaQueries from './mediaQueries';\n\nconst styles = {\n    root: {\n        boxSizing: 'border-box',\n        width: '20%',\n        height: '25%',\n        display: 'inline-block',\n        margin: '0 auto',\n        marginBottom: '-6px',\n        position: 'relative',\n        cursor: 'pointer',\n        '&:hover .deleteIcon': {\n            transform: 'scale(1.4)',\n        },\n        [mediaQueries.down('lg')]: {\n            width: '25%',\n            height: '20%',\n        },\n        [mediaQueries.down('md')]: {\n            width: '50%',\n            height: '10%',\n        },\n        [mediaQueries.down('sm')]: {\n            width: '100%',\n            height: '5%',\n        },\n    },\n    boxContent: {\n        position: 'absolute',\n        width: '100%',\n        padding: '10px',\n        left: '0',\n        bottom: '0',\n        fontSize: '12px',\n        textTransform: 'uppercase',\n        letterSpacing: '1px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        color: (props) =>\n            chroma(props.color).luminance() <= 0.4\n                ? 'white'\n                : 'rgba(0, 0, 0, 0.6)',\n    },\n    deleteIcon: {\n        transition: 'transform 300ms ease-in-out',\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles/DraggableColorBoxStyles';\n\nconst DraggableColorBox = SortableElement((props) => {\n    return (\n        <div\n            className={props.classes.root}\n            style={{ backgroundColor: props.color }}\n        >\n            <div className={props.classes.boxContent}>\n                <span>{props.name}</span>\n                <DeleteIcon\n                    className={`deleteIcon ${props.classes.deleteIcon}`}\n                    onClick={props.handleDelete}\n                />\n            </div>\n        </div>\n    );\n});\nexport default withStyles(styles)(DraggableColorBox);\n","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport DraggableColorBox from './DraggableColorBox';\n\nconst DraggableColorList = SortableContainer((props) => {\n    return (\n        <div style={{ height: '100%' }}>\n            {props.colors.map((color, idx) => (\n                <DraggableColorBox\n                    index={idx}\n                    key={color.name}\n                    color={color.color}\n                    name={color.name}\n                    handleDelete={() => props.deleteColor(color.name)}\n                />\n            ))}\n        </div>\n    );\n});\nexport default DraggableColorList;\n","const seedColors = [\n    {\n        paletteName: 'Material UI Colors',\n        id: 'material-ui-colors',\n        emoji: '🎨',\n        colors: [\n            { name: 'red', color: '#F44336' },\n            { name: 'pink', color: '#E91E63' },\n            { name: 'purple', color: '#9C27B0' },\n            { name: 'deeppurple', color: '#673AB7' },\n            { name: 'indigo', color: '#3F51B5' },\n            { name: 'blue', color: '#2196F3' },\n            { name: 'lightblue', color: '#03A9F4' },\n            { name: 'cyan', color: '#00BCD4' },\n            { name: 'teal', color: '#009688' },\n            { name: 'green', color: '#4CAF50' },\n            { name: 'lightgreen', color: '#8BC34A' },\n            { name: 'lime', color: '#CDDC39' },\n            { name: 'yellow', color: '#FFEB3B' },\n            { name: 'amber', color: '#FFC107' },\n            { name: 'orange', color: '#FF9800' },\n            { name: 'deeporange', color: '#FF5722' },\n            { name: 'brown', color: '#795548' },\n            { name: 'grey', color: '#9E9E9E' },\n            { name: 'bluegrey', color: '#607D8B' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors v1',\n        id: 'flat-ui-colors-v1',\n        emoji: '🤙',\n        colors: [\n            { name: 'Turquoise', color: '#1abc9c' },\n            { name: 'Emerald', color: '#2ecc71' },\n            { name: 'PeterRiver', color: '#3498db' },\n            { name: 'Amethyst', color: '#9b59b6' },\n            { name: 'WetAsphalt', color: '#34495e' },\n            { name: 'GreenSea', color: '#16a085' },\n            { name: 'Nephritis', color: '#27ae60' },\n            { name: 'BelizeHole', color: '#2980b9' },\n            { name: 'Wisteria', color: '#8e44ad' },\n            { name: 'MidnightBlue', color: '#2c3e50' },\n            { name: 'SunFlower', color: '#f1c40f' },\n            { name: 'Carrot', color: '#e67e22' },\n            { name: 'Alizarin', color: '#e74c3c' },\n            { name: 'Clouds', color: '#ecf0f1' },\n            { name: 'Concrete', color: '#95a5a6' },\n            { name: 'Orange', color: '#f39c12' },\n            { name: 'Pumpkin', color: '#d35400' },\n            { name: 'Pomegranate', color: '#c0392b' },\n            { name: 'Silver', color: '#bdc3c7' },\n            { name: 'Asbestos', color: '#7f8c8d' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors Dutch',\n        id: 'flat-ui-colors-dutch',\n        emoji: '🇳🇱',\n        colors: [\n            { name: 'Sunflower', color: '#FFC312' },\n            { name: 'Energos', color: '#C4E538' },\n            { name: 'BlueMartina', color: '#12CBC4' },\n            { name: 'LavenderRose', color: '#FDA7DF' },\n            { name: 'BaraRose', color: '#ED4C67' },\n            { name: 'RadiantYellow', color: '#F79F1F' },\n            { name: 'AndroidGreen', color: '#A3CB38' },\n            { name: 'MediterraneanSea', color: '#1289A7' },\n            { name: 'LavenderTea', color: '#D980FA' },\n            { name: 'VerryBerry', color: '#B53471' },\n            { name: 'PuffinsBill', color: '#EE5A24' },\n            { name: 'PixelatedGrass', color: '#009432' },\n            { name: 'MerchantMarineBlue', color: '#0652DD' },\n            { name: 'ForgottenPurple', color: '#9980FA' },\n            { name: 'HollyHock', color: '#833471' },\n            { name: 'RedPigment', color: '#EA2027' },\n            { name: 'TurkishAqua', color: '#006266' },\n            { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\n            { name: 'CircumorbitalRing', color: '#5758BB' },\n            { name: 'MagentaPurple', color: '#6F1E51' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors American',\n        id: 'flat-ui-colors-american',\n        emoji: '🇺🇸',\n        colors: [\n            { name: 'LightGreenishBlue', color: '#55efc4' },\n            { name: 'FadedPoster', color: '#81ecec' },\n            { name: 'GreenDarnerTail', color: '#74b9ff' },\n            { name: 'ShyMoment', color: '#a29bfe' },\n            { name: 'CityLights', color: '#dfe6e9' },\n            { name: 'MintLeaf', color: '#00b894' },\n            { name: 'RobinsEggBlue', color: '#00cec9' },\n            { name: 'ElectronBlue', color: '#0984e3' },\n            { name: 'ExodusFruit', color: '#6c5ce7' },\n            { name: 'SoothingBreeze', color: '#b2bec3' },\n            { name: 'SourLemon', color: '#ffeaa7' },\n            { name: 'FirstDate', color: '#fab1a0' },\n            { name: 'PinkGlamour', color: '#ff7675' },\n            { name: 'Pico8Pink', color: '#fd79a8' },\n            { name: 'AmericanRiver', color: '#636e72' },\n            { name: 'BrightYarrow', color: '#fdcb6e' },\n            { name: 'OrangeVille', color: '#e17055' },\n            { name: 'Chi-Gong', color: '#d63031' },\n            { name: 'PrunusAvium', color: '#e84393' },\n            { name: 'DraculaOrchid', color: '#2d3436' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors Aussie',\n        id: 'flat-ui-colors-aussie',\n        emoji: '🇦🇺',\n        colors: [\n            { name: 'Beekeeper', color: '#f6e58d' },\n            { name: 'SpicedNectarine', color: '#ffbe76' },\n            { name: 'PinkGlamour', color: '#ff7979' },\n            { name: 'JuneBud', color: '#badc58' },\n            { name: 'CoastalBreeze', color: '#dff9fb' },\n            { name: 'Turbo', color: '#f9ca24' },\n            { name: 'QuinceJelly', color: '#f0932b' },\n            { name: 'CarminePink', color: '#eb4d4b' },\n            { name: 'PureApple', color: '#6ab04c' },\n            { name: 'HintOfIcePack', color: '#c7ecee' },\n            { name: 'MiddleBlue', color: '#7ed6df' },\n            { name: 'Heliotrope', color: '#e056fd' },\n            { name: 'ExodusFruit', color: '#686de0' },\n            { name: 'DeepKoamaru', color: '#30336b' },\n            { name: 'SoaringEagle', color: '#95afc0' },\n            { name: 'GreenlandGreen', color: '#22a6b3' },\n            { name: 'SteelPink', color: '#be2edd' },\n            { name: 'Blurple', color: '#4834d4' },\n            { name: 'DeepCove', color: '#130f40' },\n            { name: 'WizardGrey', color: '#535c68' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors British',\n        id: 'flat-ui-colors-british',\n        emoji: '🇬🇧',\n        colors: [\n            { name: 'ProtossPylon', color: '#00a8ff' },\n            { name: 'Periwinkle', color: '#9c88ff' },\n            { name: 'Rise-N-Shine', color: '#fbc531' },\n            { name: 'DownloadProgress', color: '#4cd137' },\n            { name: 'Seabrook', color: '#487eb0' },\n            { name: 'VanaDylBlue', color: '#0097e6' },\n            { name: 'MattPurple', color: '#8c7ae6' },\n            { name: 'NanohanachaGold', color: '#e1b12c' },\n            { name: 'SkirretGreen', color: '#44bd32' },\n            { name: 'Naval', color: '#40739e' },\n            { name: 'NasturcianFlower', color: '#e84118' },\n            { name: 'LynxWhite', color: '#f5f6fa' },\n            { name: 'BlueberrySoda', color: '#7f8fa6' },\n            { name: 'MazarineBlue', color: '#273c75' },\n            { name: 'BlueNights', color: '#353b48' },\n            { name: 'HarleyOrange', color: '#c23616' },\n            { name: 'HintOfPensive', color: '#dcdde1' },\n            { name: 'ChainGangGrey', color: '#718093' },\n            { name: 'PicoVoid', color: '#192a56' },\n            { name: 'ElectroMagnetic', color: '#2f3640' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors Spanish',\n        id: 'flat-ui-colors-spanish',\n        emoji: '🇪🇸',\n        colors: [\n            { name: 'JacksonsPurple', color: '#40407a' },\n            { name: 'C64Purple', color: '#706fd3' },\n            { name: 'SwanWhite', color: '#f7f1e3' },\n            { name: 'SummerSky', color: '#34ace0' },\n            { name: 'CelestialGreen', color: '#33d9b2' },\n            { name: 'LuckyPoint', color: '#2c2c54' },\n            { name: 'Liberty', color: '#474787' },\n            { name: 'HotStone', color: '#aaa69d' },\n            { name: 'DevilBlue', color: '#227093' },\n            { name: 'PalmSpringsSplash', color: '#218c74' },\n            { name: 'FlourescentRed', color: '#ff5252' },\n            { name: 'SyntheticPumpkin', color: '#ff793f' },\n            { name: 'CrocodileTooth', color: '#d1ccc0' },\n            { name: 'MandarinSorbet', color: '#ffb142' },\n            { name: 'SpicedButterNut', color: '#ffda79' },\n            { name: 'EyeOfNewt', color: '#b33939' },\n            { name: 'ChileanFire', color: '#cd6133' },\n            { name: 'GreyPorcelain', color: '#84817a' },\n            { name: 'AlamedaOchre', color: '#cc8e35' },\n            { name: 'Desert', color: '#ccae62' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors Indian',\n        id: 'flat-ui-colors-indian',\n        emoji: '🇮🇳',\n        colors: [\n            { name: 'OrchidOrange', color: '#FEA47F' },\n            { name: 'SpiroDiscoBall', color: '#25CCF7' },\n            { name: 'HoneyGlow', color: '#EAB543' },\n            { name: 'SweetGarden', color: '#55E6C1' },\n            { name: 'FallingStar', color: '#CAD3C8' },\n            { name: 'RichGardenia', color: '#F97F51' },\n            { name: 'ClearChill', color: '#1B9CFC' },\n            { name: 'WhitePepper', color: '#F8EFBA' },\n            { name: 'Keppel', color: '#58B19F' },\n            { name: 'ShipsOfficer', color: '#2C3A47' },\n            { name: 'FieryFuchsia', color: '#B33771' },\n            { name: 'BlueBell', color: '#3B3B98' },\n            { name: 'GeorgiaPeach', color: '#FD7272' },\n            { name: 'OasisStream', color: '#9AECDB' },\n            { name: 'BrightUbe', color: '#D6A2E8' },\n            { name: 'MagentaPurple', color: '#6D214F' },\n            { name: 'EndingNavyBlue', color: '#182C61' },\n            { name: 'SasquatchSocks', color: '#FC427B' },\n            { name: 'PineGlade', color: '#BDC581' },\n            { name: 'HighlighterLavender', color: '#82589F' },\n        ],\n    },\n    {\n        paletteName: 'Flat UI Colors French',\n        id: 'flat-ui-colors-french',\n        emoji: '🇫🇷',\n        colors: [\n            { name: 'FlatFlesh', color: '#fad390' },\n            { name: 'MelonMelody', color: '#f8c291' },\n            { name: 'Livid', color: '#6a89cc' },\n            { name: 'Spray', color: '#82ccdd' },\n            { name: 'ParadiseGreen', color: '#b8e994' },\n            { name: 'SquashBlossom', color: '#f6b93b' },\n            { name: 'MandarinRed', color: '#e55039' },\n            { name: 'AzraqBlue', color: '#4a69bd' },\n            { name: 'Dupain', color: '#60a3bc' },\n            { name: 'AuroraGreen', color: '#78e08f' },\n            { name: 'IcelandPoppy', color: '#fa983a' },\n            { name: 'TomatoRed', color: '#eb2f06' },\n            { name: 'YueGuangBlue', color: '#1e3799' },\n            { name: 'GoodSamaritan', color: '#3c6382' },\n            { name: 'Waterfall', color: '#38ada9' },\n            { name: 'CarrotOrange', color: '#e58e26' },\n            { name: 'JalapenoRed', color: '#b71540' },\n            { name: 'DarkSapphire', color: '#0c2461' },\n            { name: 'ForestBlues', color: '#0a3d62' },\n            { name: 'ReefEncounter', color: '#079992' },\n        ],\n    },\n];\nexport default seedColors;\n","import React from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/NewPaletteFormStyles';\nimport PaletteFormNav from './PaletteFormNav';\nimport ColorPickerForm from './ColorPickerForm';\nimport DraggableColorList from './DraggableColorList';\nimport seedColors from '../seedColors';\n\nclass NewPaletteForm extends React.Component {\n    static defaultProps = {\n        maxColors: 20,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            colors: [...seedColors[0].colors],\n            newPaletteName: '',\n            newColorName: '',\n        };\n        this.updateColor = this.updateColor.bind(this);\n        this.addNewColor = this.addNewColor.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.deleteColor = this.deleteColor.bind(this);\n        this.clearPalette = this.clearPalette.bind(this);\n        this.addRandomColor = this.addRandomColor.bind(this);\n    }\n\n    handleSubmit(paletteName, emoji) {\n        const newPalette = {\n            paletteName,\n            id: paletteName.toLowerCase().replace(/ /g, '-'),\n            colors: this.state.colors,\n            emoji,\n        };\n        this.props.savePalette(newPalette);\n        this.props.history.push('/');\n    }\n\n    updateColor(newColor) {\n        this.setState({ currentColor: newColor.hex });\n    }\n\n    addNewColor(newColor) {\n        this.setState({\n            colors: [...this.state.colors, newColor],\n            newColorName: '',\n        });\n    }\n\n    deleteColor(colorName) {\n        this.setState({\n            colors: this.state.colors.filter(({ name }) => name !== colorName),\n        });\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ colors }) => ({\n            colors: arrayMove(colors, oldIndex, newIndex),\n        }));\n    };\n\n    clearPalette() {\n        this.setState({ colors: [] });\n    }\n\n    addRandomColor() {\n        const allColors = this.props.palettes.map((p) => p.colors).flat();\n        const getRandomColor = () => {\n            return allColors[Math.floor(Math.random() * allColors.length)];\n        };\n        let randomColor = getRandomColor();\n        while (this.state.colors.includes(randomColor)) {\n            randomColor = getRandomColor();\n        }\n        this.setState({\n            colors: [...this.state.colors, randomColor],\n        });\n    }\n\n    render() {\n        const { classes, maxColors, palettes } = this.props;\n        const { open, colors } = this.state;\n        const paletteIsFull = colors.length >= maxColors;\n        return (\n            <div className={classes.root}>\n                <PaletteFormNav\n                    palettes={palettes}\n                    open={open}\n                    handleSubmit={this.handleSubmit}\n                    handleDrawerOpen={this.handleDrawerOpen}\n                />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <div className={classes.drawerContainer}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            Design Your Palette\n                        </Typography>\n                        <div className={classes.buttonsDiv}>\n                            <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={this.clearPalette}\n                            >\n                                Clear Palette\n                            </Button>\n                            <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.addRandomColor}\n                                disabled={paletteIsFull}\n                            >\n                                Random Color\n                            </Button>\n                        </div>\n                        <ColorPickerForm\n                            colors={colors}\n                            addNewColor={this.addNewColor}\n                            paletteIsFull={paletteIsFull}\n                        />\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n                    <DraggableColorList\n                        onSortEnd={this.onSortEnd}\n                        axis=\"xy\"\n                        colors={colors}\n                        deleteColor={this.deleteColor}\n                        distance={5}\n                    />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\n","import chroma from 'chroma-js';\n\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(palette) {\n    let newPalette = {\n        paletteName: palette.paletteName,\n        id: palette.id,\n        emoji: palette.emoji,\n        colors: {},\n    };\n\n    levels.forEach((level) => {\n        newPalette.colors[level] = [];\n    });\n    palette.colors.forEach((color) => {\n        let scale = generateScale(color.color, 10).reverse();\n        scale.forEach((shade, i) => {\n            newPalette.colors[levels[i]].push({\n                name: `${color.name} ${levels[i]}`,\n                id: color.name.toLowerCase().replace(/ /g, '-'),\n                hex: shade,\n                rgb: chroma(shade).css(),\n                rgba: chroma(shade)\n                    .css()\n                    .replace('rgb', 'rgba')\n                    .replace(')', ',1.0)'),\n            });\n        });\n    });\n    return newPalette;\n}\n\nfunction getRange(hexColor) {\n    return [chroma(hexColor).darken(1.4).hex(), hexColor, '#ffffff'];\n}\n\nfunction generateScale(hexColor, numberOfColors) {\n    return chroma.scale(getRange(hexColor)).mode('lab').colors(numberOfColors);\n}\n\nexport default generatePalette;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Page from './components/Page';\nimport Palette from './components/Palette';\nimport SingleColorPalette from './components/SingleColorPalette';\nimport PaletteList from './components/PaletteList';\nimport NewPaletteForm from './components/NewPaletteForm';\nimport seedColors from './seedColors';\nimport generatePalette from './colorHelpers';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            palettes:\n                JSON.parse(window.localStorage.getItem('palettes')) ||\n                seedColors,\n        };\n        this.savePalette = this.savePalette.bind(this);\n        this.findPalette = this.findPalette.bind(this);\n        this.deletePalette = this.deletePalette.bind(this);\n        this.syncLocalStorage = this.syncLocalStorage.bind(this);\n    }\n\n    findPalette(id) {\n        return this.state.palettes.find((palette) => palette.id === id);\n    }\n\n    savePalette(newPalette) {\n        this.setState(\n            { palettes: [...this.state.palettes, newPalette] },\n            this.syncLocalStorage\n        );\n    }\n    deletePalette(id) {\n        this.setState(\n            (st) => ({\n                palettes: this.state.palettes.filter(\n                    (palette) => palette.id !== id\n                ),\n            }),\n            this.syncLocalStorage\n        );\n    }\n    syncLocalStorage() {\n        window.localStorage.setItem(\n            'palettes',\n            JSON.stringify(this.state.palettes)\n        );\n    }\n    render() {\n        const paletteListPage = (routeProps) => (\n            <Page>\n                <PaletteList\n                    palettes={this.state.palettes}\n                    {...routeProps}\n                    deletePalette={this.deletePalette}\n                />\n            </Page>\n        );\n        return (\n            <Route\n                render={({ location }) => (\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={location.key}\n                            classNames=\"fade\"\n                            timeout={500}\n                        >\n                            <Switch location={location}>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={paletteListPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/palette/create\"\n                                    render={(routeProps) => (\n                                        <Page>\n                                            <NewPaletteForm\n                                                savePalette={this.savePalette}\n                                                {...routeProps}\n                                                palettes={this.state.palettes}\n                                            />\n                                        </Page>\n                                    )}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/palette/:paletteId\"\n                                    render={(routeProps) => (\n                                        <Page>\n                                            <Palette\n                                                palette={generatePalette(\n                                                    this.findPalette(\n                                                        routeProps.match.params\n                                                            .paletteId\n                                                    )\n                                                )}\n                                            />\n                                        </Page>\n                                    )}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/palette/:paletteId/:colorId\"\n                                    render={(routeProps) => (\n                                        <Page>\n                                            <SingleColorPalette\n                                                colorId={\n                                                    routeProps.match.params\n                                                        .colorId\n                                                }\n                                                palette={generatePalette(\n                                                    this.findPalette(\n                                                        routeProps.match.params\n                                                            .paletteId\n                                                    )\n                                                )}\n                                            />\n                                        </Page>\n                                    )}\n                                />\n                                <Route render={paletteListPage} />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                )}\n            />\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}